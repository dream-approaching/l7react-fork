{"version":3,"sources":["../../src/component/MapboxScene.tsx"],"names":["MapboxScene","React","memo","props","style","className","map","option","onSceneLoaded","container","scene","setScene","sceneInstance","Scene","id","current","Mapbox","on","destroy","setMapStyle","JSON","stringify","zoom","setZoom","center","setCenter","pitch","setPitch","rotation","setRotation","ref","children"],"mappings":";;;;;;;;;;;;;;;AAAA;;AAGA;;AACA;;AACA;;;;;;;;;AASA,IAAMA,WAAW,GAAGC,eAAMC,IAAN,CAAW,UAACC,KAAD,EAA2B;AAAA,MAChDC,KADgD,GACCD,KADD,CAChDC,KADgD;AAAA,MACzCC,SADyC,GACCF,KADD,CACzCE,SADyC;AAAA,MAC9BC,GAD8B,GACCH,KADD,CAC9BG,GAD8B;AAAA,MACzBC,MADyB,GACCJ,KADD,CACzBI,MADyB;AAAA,MACjBC,aADiB,GACCL,KADD,CACjBK,aADiB;AAExD,MAAMC,SAAS,GAAG,uBAAlB;;AAFwD,kBAG9B,sBAH8B;AAAA;AAAA,MAGjDC,KAHiD;AAAA,MAG1CC,QAH0C;;AAMxD,wBAAU,YAAM;AACd,QAAMC,aAAa,GAAG,IAAIC,QAAJ;AACpBC,MAAAA,EAAE,EAAEL,SAAS,CAACM;AADM,OAEjBR,MAFiB;AAGpBD,MAAAA,GAAG,EAAE,IAAIU,cAAJ,CAAWV,GAAX;AAHe,OAAtB;AAKAM,IAAAA,aAAa,CAACK,EAAd,CAAiB,QAAjB,EAA2B,YAAM;AAC/BN,MAAAA,QAAQ,CAACC,aAAD,CAAR;;AACA,UAAIJ,aAAJ,EAAmB;AACjBA,QAAAA,aAAa,CAACI,aAAD,CAAb;AACD;AACF,KALD;AAMA,WAAO,YAAM;AACXA,MAAAA,aAAa,CAACM,OAAd;AACD,KAFD;AAGD,GAfD,EAeG,EAfH;AAkBA,wBAAU,YAAM;AACd,QAAIR,KAAK,IAAIJ,GAAG,CAACF,KAAjB,EAAwB;AACtBM,MAAAA,KAAK,CAACS,WAAN,CAAkBb,GAAG,CAACF,KAAtB;AACD;AACF,GAJD,EAIG,CAACgB,IAAI,CAACC,SAAL,CAAef,GAAG,CAACF,KAAnB,CAAD,CAJH;AAMA,wBAAU,YAAM;AACd,QAAIM,KAAK,IAAIJ,GAAG,CAACgB,IAAjB,EAAuB;AACrBZ,MAAAA,KAAK,CAACa,OAAN,CAAcjB,GAAG,CAACgB,IAAlB;AACD;AACF,GAJD,EAIG,CAAChB,GAAG,CAACgB,IAAL,CAJH;AAMA,wBAAU,YAAM;AACd,QAAIZ,KAAK,IAAIJ,GAAG,CAACkB,MAAjB,EAAyB;AACvBd,MAAAA,KAAK,CAACe,SAAN,CAAgBnB,GAAG,CAACkB,MAApB;AACD;AACF,GAJD,EAIG,CAACJ,IAAI,CAACC,SAAL,CAAef,GAAG,CAACkB,MAAnB,CAAD,CAJH;AAKA,wBAAU,YAAM;AACd,QAAId,KAAK,IAAIJ,GAAG,CAACoB,KAAjB,EAAwB;AACtBhB,MAAAA,KAAK,CAACiB,QAAN,CAAerB,GAAG,CAACoB,KAAnB;AACD;AACF,GAJD,EAIG,CAACpB,GAAG,CAACoB,KAAL,CAJH;AAKA,wBAAU,YAAM;AACd,QAAIhB,KAAK,IAAIJ,GAAG,CAACsB,QAAjB,EAA2B;AACzBlB,MAAAA,KAAK,CAACmB,WAAN,CAAkBvB,GAAG,CAACsB,QAAtB;AACD;AACF,GAJD,EAIG,CAACtB,GAAG,CAACsB,QAAL,CAJH;AAMA,SACE,6BAAC,0BAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAElB,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,0BACC,KADD,EAEC;AACEoB,IAAAA,GAAG,EAAErB,SADP;AAEEL,IAAAA,KAAK,EAALA,KAFF;AAGEC,IAAAA,SAAS,EAATA;AAHF,GAFD,EAOCK,KAAK,IAAIP,KAAK,CAAC4B,QAPhB,CADH,CADF;AAaD,CAjEmB,CAApB;;eAmEe/B,W","sourcesContent":["import { IMapConfig, ISceneConfig, Scene, Zoom } from '@antv/l7';\n// @ts-ignore\n// tslint:disable-next-line:no-submodule-imports\nimport { Mapbox } from '@antv/l7-maps';\nimport React, { createElement, createRef, useEffect, useState } from 'react';\nimport { SceneContext } from './SceneContext';\ninterface IMapSceneConig {\n  style?: React.CSSProperties;\n  className?: string;\n  map: Partial<IMapConfig>;\n  option?: Partial<ISceneConfig>;\n  children?: React.ReactNode;\n  onSceneLoaded?: (scene: Scene) => void;\n}\nconst MapboxScene = React.memo((props: IMapSceneConig) => {\n  const { style, className, map, option, onSceneLoaded } = props;\n  const container = createRef();\n  const [scene, setScene] = useState<Scene>();\n\n  // 地图初始\n  useEffect(() => {\n    const sceneInstance = new Scene({\n      id: container.current as HTMLDivElement,\n      ...option,\n      map: new Mapbox(map),\n    });\n    sceneInstance.on('loaded', () => {\n      setScene(sceneInstance);\n      if (onSceneLoaded) {\n        onSceneLoaded(sceneInstance);\n      }\n    });\n    return () => {\n      sceneInstance.destroy();\n    };\n  }, []);\n\n  // 更新地图样式\n  useEffect(() => {\n    if (scene && map.style) {\n      scene.setMapStyle(map.style);\n    }\n  }, [JSON.stringify(map.style)]);\n\n  useEffect(() => {\n    if (scene && map.zoom) {\n      scene.setZoom(map.zoom);\n    }\n  }, [map.zoom]);\n\n  useEffect(() => {\n    if (scene && map.center) {\n      scene.setCenter(map.center);\n    }\n  }, [JSON.stringify(map.center)]);\n  useEffect(() => {\n    if (scene && map.pitch) {\n      scene.setPitch(map.pitch);\n    }\n  }, [map.pitch]);\n  useEffect(() => {\n    if (scene && map.rotation) {\n      scene.setRotation(map.rotation);\n    }\n  }, [map.rotation]);\n\n  return (\n    <SceneContext.Provider value={scene}>\n      {createElement(\n        'div',\n        {\n          ref: container,\n          style,\n          className,\n        },\n        scene && props.children,\n      )}\n    </SceneContext.Provider>\n  );\n});\n\nexport default MapboxScene;\n"],"file":"MapboxScene.js"}