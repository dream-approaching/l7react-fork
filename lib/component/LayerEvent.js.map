{"version":3,"sources":["../../src/component/LayerEvent.tsx"],"names":["useEffect","React","LayerEvent","memo","props","type","handler","layer","off","on"],"mappings":";;;;;;;;;AACA;;AACA;;IAEQA,S,GAAcC,K,CAAdD,S;AAKD,IAAME,UAAU,GAAGD,KAAK,CAACE,IAAN,CAAW,UAACC,KAAD,EAAwB;AAAA,MACnDC,IADmD,GACjCD,KADiC,CACnDC,IADmD;AAAA,MAC7CC,OAD6C,GACjCF,KADiC,CAC7CE,OAD6C;AAE3D,MAAMC,KAAK,GAAI,kCAAf;AAEAP,EAAAA,SAAS,CAAC,YAAM;AACdO,IAAAA,KAAK,CAACC,GAAN,CAAUH,IAAV,EAAgBC,OAAhB;AACAC,IAAAA,KAAK,CAACE,EAAN,CAASJ,IAAT,EAAeC,OAAf;AACA,WAAO,YAAM;AACXC,MAAAA,KAAK,CAACC,GAAN,CAAUH,IAAV,EAAgBC,OAAhB;AACD,KAFD;AAGD,GANQ,EAMN,CAACD,IAAD,EAAOC,OAAP,CANM,CAAT;AAOA,SAAO,IAAP;AACD,CAZyB,CAAnB","sourcesContent":["import { ILayer } from '@antv/l7';\nimport * as React from 'react';\nimport { useLayerValue } from './LayerContext';\n\nconst { useEffect } = React;\ninterface ILayerProps {\n  type: string;\n  handler: (...args: any[]) => void;\n}\nexport const LayerEvent = React.memo((props: ILayerProps) => {\n  const { type, handler } = props;\n  const layer = (useLayerValue() as unknown) as ILayer;\n\n  useEffect(() => {\n    layer.off(type, handler);\n    layer.on(type, handler);\n    return () => {\n      layer.off(type, handler);\n    };\n  }, [type, handler]);\n  return null;\n});\n"],"file":"LayerEvent.js"}