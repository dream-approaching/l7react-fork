{"version":3,"sources":["../../../src/component/LayerAttribute/Layer.tsx"],"names":["useEffect","React","useState","BaseLayer","type","props","source","color","shape","style","size","scale","active","select","filter","animate","options","onLayerLoaded","mapScene","layer","setLayer","l","PolygonLayer","LineLayer","PointLayer","HeatmapLayer","RasterLayer","ImageLayer","CityBuildingLayer","on","undefined","addLayer","removeLayer","render","inited","updateLayerConfig","minZoom","maxZoom","visible","zIndex","setIndex","blend","setBlend","children"],"mappings":"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","sourcesContent":["import {\n  CityBuildingLayer,\n  HeatmapLayer,\n  ILayer,\n  ImageLayer,\n  LineLayer,\n  PointLayer,\n  PolygonLayer,\n  RasterLayer,\n  Scene,\n} from '@antv/l7';\nimport * as React from 'react';\nimport { LayerContext } from '../LayerContext';\nimport { useSceneValue } from '../SceneContext';\nimport {\n  Active,\n  Animate,\n  Color,\n  Filter,\n  ILayerProps,\n  Scale,\n  Select,\n  Shape,\n  Size,\n  Source,\n  Style,\n} from './';\n\nconst { useEffect, useState } = React;\n\nexport default function BaseLayer(type: string, props: ILayerProps) {\n  const {\n    source,\n    color,\n    shape,\n    style,\n    size,\n    scale,\n    active,\n    select,\n    filter,\n    animate,\n    options,\n    onLayerLoaded,\n  } = props;\n  const mapScene = (useSceneValue() as unknown) as Scene;\n  const [layer, setLayer] = useState<ILayer>();\n  if (!layer) {\n    let l: ILayer;\n    switch (type) {\n      case 'polygonLayer':\n        l = new PolygonLayer(options);\n        break;\n      case 'lineLayer':\n        l = new LineLayer(options);\n        break;\n      case 'pointLayer':\n        l = new PointLayer(options);\n        break;\n      case 'heatmapLayer':\n        l = new HeatmapLayer(options);\n        break;\n      case 'rasterLayer':\n        l = new RasterLayer(options);\n        break;\n      case 'imageLayer':\n        l = new ImageLayer(options);\n        break;\n      case 'citybuildingLayer':\n        l = new CityBuildingLayer(options);\n        break;\n      default:\n        l = new PolygonLayer(options);\n    }\n    l.on('inited', () => {\n      if (onLayerLoaded) {\n        onLayerLoaded(l, mapScene);\n      }\n    });\n    setLayer(l);\n  }\n\n  useEffect(() => {\n    if (layer !== undefined) {\n      mapScene.addLayer(layer as ILayer);\n      return () => {\n        mapScene.removeLayer(layer as ILayer);\n      };\n    }\n  }, []);\n  useEffect(() => {\n    // 重绘layer\n    if (layer) {\n      mapScene.render();\n    }\n  });\n\n  useEffect(() => {\n    if (layer && layer.inited && options) {\n      layer.updateLayerConfig(options);\n    }\n  }, [options?.minZoom, options?.maxZoom, options?.visible]);\n\n  useEffect(() => {\n    if (layer && layer.inited && options && options.zIndex) {\n      layer.setIndex(options.zIndex);\n    }\n  }, [options?.zIndex]);\n\n  useEffect(() => {\n    if (layer && layer.inited && options && options.blend) {\n      layer.setBlend(options.blend);\n    }\n  }, [options?.blend]);\n\n  return layer !== null && layer !== undefined ? (\n    <LayerContext.Provider value={layer}>\n      <Source layer={layer} source={source} />\n      {scale && <Scale layer={layer} scale={scale} />}\n      {color && <Color layer={layer} color={color} />}\n      {size && <Size layer={layer} size={size} />}\n      {shape && <Shape layer={layer} shape={shape} />}\n      {style && <Style layer={layer} style={style} />}\n      {active && <Active layer={layer} active={active} />}\n      {select && <Select layer={layer} select={select} />}\n      {filter && <Filter layer={layer} filter={filter} />}\n      {animate && <Animate layer={layer} animate={animate} />}\n      {/* LayerContext主要传入LayerEvent组件 */}\n      {props.children}\n    </LayerContext.Provider>\n  ) : null;\n}\n"],"file":"Layer.js"}