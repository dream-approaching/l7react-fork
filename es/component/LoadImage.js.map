{"version":3,"sources":["../../src/component/LoadImage.tsx"],"names":["React","useSceneValue","useEffect","memo","LoadImage","props","name","url","mapScene","addImage"],"mappings":"AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,aAAT,QAA8B,gBAA9B;IAEQC,S,GAAcF,K,CAAdE,S;AAKR,eAAeF,KAAK,CAACG,IAAN,CAAW,SAASC,SAAT,CAAmBC,KAAnB,EAA2C;AAAA,MAC3DC,IAD2D,GAC7CD,KAD6C,CAC3DC,IAD2D;AAAA,MACrDC,GADqD,GAC7CF,KAD6C,CACrDE,GADqD;AAEnE,MAAMC,QAAQ,GAAIP,aAAa,EAA/B;AACAC,EAAAA,SAAS,CAAC,YAAM;AACdM,IAAAA,QAAQ,CAACC,QAAT,CAAkBH,IAAlB,EAAwBC,GAAxB;AACD,GAFQ,EAEN,CAACD,IAAD,EAAOC,GAAP,CAFM,CAAT;AAGA,SAAO,IAAP;AACD,CAPc,CAAf","sourcesContent":["import { IActiveOption, IImage, ILayer, Scene } from '@antv/l7';\nimport * as React from 'react';\nimport { useSceneValue } from './SceneContext';\n\nconst { useEffect } = React;\ninterface ILoadImageProps {\n  name: string;\n  url: IImage;\n}\nexport default React.memo(function LoadImage(props: ILoadImageProps) {\n  const { name, url } = props;\n  const mapScene = (useSceneValue() as unknown) as Scene;\n  useEffect(() => {\n    mapScene.addImage(name, url);\n  }, [name, url]);\n  return null;\n});\n"],"file":"LoadImage.js"}