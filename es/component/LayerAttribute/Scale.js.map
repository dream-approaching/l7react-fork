{"version":3,"sources":["../../../src/component/LayerAttribute/Scale.tsx"],"names":["React","useEffect","memo","Chart","props","layer","scale","values"],"mappings":"AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;IAGQC,S,GAAcD,K,CAAdC,S;AAKR,eAAeD,KAAK,CAACE,IAAN,CAAW,SAASC,KAAT,CAAeC,KAAf,EAAmC;AAAA,MACnDC,KADmD,GAClCD,KADkC,CACnDC,KADmD;AAAA,MAC5CC,KAD4C,GAClCF,KADkC,CAC5CE,KAD4C;AAE3DL,EAAAA,SAAS,CAAC,YAAM;AACdI,IAAAA,KAAK,CAACC,KAAN,CAAYA,KAAK,CAACC,MAAlB;AACD,GAFQ,EAEN,CAACD,KAAK,CAACC,MAAP,CAFM,CAAT;AAGA,SAAO,IAAP;AACD,CANc,CAAf","sourcesContent":["import { ILayer, IScale, IScaleOptions } from '@antv/l7';\nimport * as React from 'react';\nimport { IScaleAttributeOptions } from './';\n\nconst { useEffect } = React;\ninterface ILayerProps {\n  layer: ILayer;\n  scale: Partial<IScaleAttributeOptions>;\n}\nexport default React.memo(function Chart(props: ILayerProps) {\n  const { layer, scale } = props;\n  useEffect(() => {\n    layer.scale(scale.values as IScaleOptions);\n  }, [scale.values]);\n  return null;\n});\n"],"file":"Scale.js"}